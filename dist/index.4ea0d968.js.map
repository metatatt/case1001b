{"mappings":"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","sources":["case1001b/src/index.js"],"sourcesContent":["/* globals AFRAME */\n\nAFRAME.registerComponent('artgalleryframe', {\n  schema: {\n    name: {type: 'string'},\n    rotated: {type: 'bool'},\n    metadata: {type: 'string'},\n  },\n  init() {\n    const contents = document.getElementById('contents')\n    const container = document.getElementById('container')\n\n    const {object3D} = this.el\n\n    // Hide the image target until it is found\n    object3D.visible = false\n\n    // Metadata comes to the primitive as a string, so we parse and destructure it\n    const {artist, date, title, wikiTitle} = JSON.parse(this.data.metadata)\n\n    const frameEl = document.createElement('a-entity')\n    frameEl.setAttribute('scale', '0.95 0.95 0.95')\n    frameEl.setAttribute('gltf-model', '#frame-model')\n    if (this.data.rotated) {\n      // Rotate the frame for a landscape target\n      frameEl.setAttribute('rotation', '0 0 90')\n    }\n    this.el.appendChild(frameEl)\n\n    // Instantiate the element with information about the painting\n    const infoDisplay = document.createElement('a-entity')\n    infoDisplay.setAttribute('info-display', {title, artist, date})\n    infoDisplay.object3D.position.set(0, this.data.rotated ? -0.4 : -0.5, 0.1)\n    this.el.appendChild(infoDisplay)\n\n    // Use the title of the painting to fetch some info from the Wikipedia API\n    // If a painting doesn't have a Wikipedia article of its own, we use the painter's article via\n    // wikiTitle\n    const apiUrl = 'https://en.wikipedia.org/w/api.php?action=query' +\n      `&titles=${wikiTitle || title}&format=json&prop=extracts&exintro=1&origin=*`\n    let pageContent\n    fetch(apiUrl, {mode: 'cors'})\n      .then(e => e.json())\n      .then((data) => {\n        const page = Object.entries(data.query.pages)[0][1]\n        pageContent = `<h1>${page.title}</h1>${page.extract}`\n      })\n\n    const tapTarget = document.createElement('a-box')\n    // Image targets are 3:4 so the target is scaled to match\n    tapTarget.setAttribute('scale', '0.75 1 0.1')\n    tapTarget.setAttribute('material', 'opacity: 0; transparent:true')\n    if (this.data.rotated) {\n      // Rotate the tap target for a landscape target\n      tapTarget.setAttribute('rotation', '0 0 90')\n    }\n    this.el.appendChild(tapTarget)\n\n    tapTarget.addEventListener('click', () => {\n      // Set the innerHTML of our UI element to the data returned by the API\n      contents.innerHTML = pageContent\n      // Removing the collapsed class from container triggers a CSS transition to show the content\n      container.classList.remove('collapsed')\n    })\n\n    // showImage handles displaying and moving the virtual object to match the image\n    const showImage = ({detail}) => {\n      // Updating position/rotation/scale using object3D is more performant than setAttribute\n      object3D.position.copy(detail.position)\n      object3D.quaternion.copy(detail.rotation)\n      object3D.scale.set(detail.scale, detail.scale, detail.scale)\n      object3D.visible = true\n      // Add tapTarget as a clickable object\n      tapTarget.classList.add('cantap')\n    }\n\n    // hideImage handles hiding the virtual object when the image target is lost\n    const hideImage = () => {\n      object3D.visible = false\n      // Remove tapTarget from clickable objects\n      tapTarget.classList.remove('cantap')\n    }\n\n    // These events are routed and dispatched by xrextras-generate-image-targets\n    this.el.addEventListener('xrimagefound', showImage)\n    this.el.addEventListener('xrimageupdated', showImage)\n    this.el.addEventListener('xrimagelost', hideImage)\n  },\n})\n\n// This component uses the A-Frame text component to display information about a painting\nAFRAME.registerComponent('info-display', {\n  schema: {\n    title: {default: ''},\n    artist: {default: ''},\n    date: {default: ''},\n  },\n  init() {\n    // Limit title to 20 characters\n    const displayTitle =\n      this.data.title.length > 20 ? `${this.data.title.substring(0, 17)}...` : this.data.title\n    const text = `${displayTitle}\\n${this.data.artist}, ${this.data.date}`\n    const textData = {\n      align: 'left',\n      width: 0.7,\n      wrapCount: 22,\n      value: text,\n      color: 'white',\n    }\n\n    this.el.setAttribute('text', textData)\n\n    // Instantiate a second text object behind the first to achieve an shadow effect\n    const textShadowEl = document.createElement('a-entity')\n    textData.color = 'black'\n    textShadowEl.setAttribute('text', textData)\n    textShadowEl.object3D.position.z = -0.01\n    this.el.appendChild(textShadowEl)\n  },\n})\n\n// xrextras-generate-image-targets uses this primitive to populate multiple image targets\nAFRAME.registerPrimitive('artgallery-frame', {\n  defaultComponents: {\n    artgalleryframe: {},\n  },\n\n  mappings: {\n    name: 'artgalleryframe.name',\n    rotated: 'artgalleryframe.rotated',\n    metadata: 'artgalleryframe.metadata',\n  },\n})\n"],"names":[],"version":3,"file":"index.4ea0d968.js.map","sourceRoot":"/__parcel_source_root/"}